#!/usr/bin/env bash

# WARNING: rights to this file should be 600, by default most Linux distributions use 644 instead which is not ideal.
#
# see https://steflan-security.com/linux-privilege-escalation-exploiting-bashrc/

# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac


########################################################################################################################
# mise
#
# @see https://mise.jdx.dev/
########################################################################################################################
eval "$(~/.local/bin/mise activate bash)"


########################################################################################################################
# HISTORY
########################################################################################################################

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth:erasedups

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi


########################################################################################################################
# Aliases
########################################################################################################################

# WARNING: This must be placed after sourcing bash-it to work!
#
# You may want to put all your additions into a separate file like  ~/.bash_aliases, instead of adding them here
# directly. See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
  . "${HOME}/.bash_aliases"
fi

# Specific computer aliases
if [ -f /home/vagrant/workspace/baptiste.gaillard/.bash_aliases ] ; then
  . /home/vagrant/workspace/baptiste.gaillard/.bash_aliases
fi


########################################################################################################################
# Google Cloud
########################################################################################################################
if [ -d "${HOME}/google-cloud-sdk" ] ; then

  # The next line updates PATH for the Google Cloud SDK.
  if [ -f "${HOME}/google-cloud-sdk/path.bash.inc" ]; then . "${HOME}/google-cloud-sdk/path.bash.inc"; fi

  # The next line enables shell command completion for gcloud.
  if [ -f "${HOME}/google-cloud-sdk/completion.bash.inc" ]; then . "${HOME}/google-cloud-sdk/completion.bash.inc"; fi

fi


{{ if eq .chezmoi.username "baptiste" -}}
########################################################################################################################
# Dropbox
########################################################################################################################

# The 'dropbox' script is created by fresh install in '~/.local/bin"
if ! pgrep dropbox >/dev/null ; then

    if [ ! -d ~/.dropbox-dist ] ; then
      echo "Dropbox install not found!"
      echo "see https://www.dropbox.com/install-linux"
      # TODO: Find a clean way to notify and log
      #       see https://wiki.archlinux.org/title/Desktop_notifications
    else
      ~/.dropbox-dist/dropboxd > /tmp/dropboxd.log 2>&1 &
    fi
fi

{{- end }}


########################################################################################################################
# fzf
#
# @see https://github.com/junegunn/fzf
########################################################################################################################
eval "$(fzf --bash)"


########################################################################################################################
# Node
########################################################################################################################
if [ -d "${HOME}/.npm-packages/bin" ] ; then
  export PATH=$PATH:$HOME/.npm-packages/bin
fi

export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PATH:$PNPM_HOME"
if [ ! -d "${PNPM_HOME}" ] ; then
  mkdir -p "${PNPM_HOME}"
fi


########################################################################################################################
# Ruby
########################################################################################################################
export PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH


########################################################################################################################
# Rust
########################################################################################################################
. "$HOME/.cargo/env"


########################################################################################################################
# Krew
########################################################################################################################
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"


########################################################################################################################
# Kubernetes
#
# - kube-ps1.sh is configured in ~/bash_it.theme.bash
########################################################################################################################
if which kubectl >/dev/null ; then
    source <(kubectl completion bash)

    complete -F __start_kubectl k
fi
if [ -f "${HOME}/scripts/kube-ps1.sh" ] ; then
  source "${HOME}/scripts/kube-ps1.sh"
fi


########################################################################################################################
# Serverless framework
########################################################################################################################
export PATH="$HOME/.serverless/bin:$PATH"


########################################################################################################################
# Texlive
########################################################################################################################
export PATH="$PATH:/usr/local/texlive/2022/bin/x86_64-linux"


########################################################################################################################
# Airflow
########################################################################################################################
if [ -d "${HOME}/airflow" ] ; then
  export AIRFLOW_HOME="$HOME/airflow"
fi


########################################################################################################################
# Utility functions
########################################################################################################################

# Generate a random password
gpw() {
    openssl rand -base64 48 | cut -c1-"${1}";
}


########################################################################################################################
# Various tricks
########################################################################################################################

# Allow Ctrl+Z to work for 'bg' too.
#
# see https://serverfault.com/questions/283678/whats-the-short-cut-for-fg-in-linux#answer-705440
stty susp undef
bind '"\C-z":"fg\015"'


########################################################################################################################
# Specific computer bashrc files
########################################################################################################################
if [ -f /home/vagrant/workspace/baptiste.gaillard/.bashrc ] ; then
  . /home/vagrant/workspace/baptiste.gaillard/.bashrc
fi


########################################################################################################################
# Terminal Multiplexer
########################################################################################################################
{{ if eq .chezmoi.username "vagrant" -}}

if ~/.cargo/bin/zellij list-sessions -n | grep "(current)" >/dev/null 2>&1 ; then
  true # Open shell inside Zellij so do nothing
elif ~/.cargo/bin/zellij list-sessions -n | grep -E "^d " >/dev/null 2>&1 ; then
  ~/.cargo/bin/zellij attach d
else
  ~/.cargo/bin/zellij --layout dcp --session d
fi

{{- else }}

if [[ -z "$ZELLIJ" ]]; then

    # @see https://zellij.dev/documentation/integration
    ZELLIJ_AUTO_ATTACH=true
    ZELLIJ_AUTO_EXIT=true

    if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
        if ! zellij list-sessions -n >> /dev/null; then
          zellij --new-session-with-layout baptiste --session d
        elif zellij list-sessions -n | grep -E "^d "; then
          zellij attach d
        else
          zellij --new-session-with-layout baptiste --session d
        fi
    else
        zellij --layout baptiste --session d
    fi

    if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
        exit
    fi
fi

{{- end }}


########################################################################################################################
# Starship
########################################################################################################################
eval "$(starship init bash)"


########################################################################################################################
# Atuin
########################################################################################################################
export ATUIN_NOBIND="true"
eval "$(atuin init bash)"
bind -x '"\C-r": __atuin_history --keymap-mode=vim-insert'


########################################################################################################################
# zoxide
#
# WARNING: Must be loaded at the end of the bashrc to avoid conflicts with other tools like startship.
#
# @see https://github.com/ajeetdsouza/zoxide/issues/1013#issuecomment-2760232603
########################################################################################################################
eval "$(zoxide init bash)"
