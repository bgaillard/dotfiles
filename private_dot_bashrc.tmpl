#!/usr/bin/env bash

# WARNING: rights to this file should be 600, by default most Linux distributions use 644 instead which is not ideal.
#
# see https://steflan-security.com/linux-privilege-escalation-exploiting-bashrc/

# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac


#########################################################################################################################
# PATH
#########################################################################################################################

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] && ! echo "$PATH" | grep "$HOME/bin" >/dev/null ; then
    export PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] && ! echo "$PATH" | grep "$HOME/.local/bin" >/dev/null ; then
    export PATH="$HOME/.local/bin:$PATH"
fi

if [ -d /usr/sbin ] && ! echo "$PATH" | grep "/usr/sbin" >/dev/null ; then
    export PATH="$PATH:/usr/sbin"
fi

#########################################################################################################################
# HISTORY
#########################################################################################################################

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth:erasedups

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi


########################################################################################################################
# Bash-it
########################################################################################################################

# Path to the bash it configuration
export BASH_IT="${HOME}/.bash_it"

# Lock and Load a custom theme file.
# Leave empty to disable theming.
# location /.bash_it/themes/
#
# see https://github.com/Bash-it/bash-it/wiki/Themes
#  - bakke
#  - bobby
#  - brunton
#  - candy
#  - clean
#  - demula
#  - dos
#  - doubletime
#  - doubletime_multiline
#  - doubletime_multiline_pyonly
#  - dulcie
#  - duru
#  - elixr
#  - emperor
#  - envy
#  - essential
#  - font
#  - gallifrey
#  - githelpers.theme.bash
#  - gitline
#  - hawaii50
#  - iterate
#  - kitsune
#  - liquidprompt
#  - luan
#  - mairan
#  - mbriggs
#  - metal
#  - minimal
#  - modern
#  - modern-t
#  - modern-time
#  - morris
#  - n0qorg
#  - newin
#  - norbu
#  - nwinkler
#  - nwinkler_random_colors
#  - p4helpers.theme.bash
#  - parrot
#  - pete
#  - powerline
#  - powerline-multiline
#  - powerline-naked
#  - powerline-plain
#  - powerturk
#  - primer
#  - pro
#  - pure
#  - purity
#  - rainbowbrite
#  - ramses
#  - rana
#  - redline
#  - rjorgenson
#  - roderik
#  - sexy
#  - simple
#  - sirup
#  - slick
#  - standard
#  - tonka
#  - tonotdo
#  - tylenol
#  - wanelo
#  - zitron
#  - zork
export BASH_IT_THEME='pure'

# (Advanced): Change this to the name of your remote repo if you
# cloned bash-it with a remote other than origin such as `bash-it`.
# export BASH_IT_REMOTE='bash-it'

# (Advanced): Change this to the name of the main development branch if
# you renamed it or if it was changed for some reason
# export BASH_IT_DEVELOPMENT_BRANCH='master'

# Your place for hosting Git repos. I use this for private repos.
export GIT_HOSTING='git@git.domain.com'

# Don't check mail when opening terminal.
unset MAILCHECK

# Change this to your console based IRC client of choice.
# TODO: Use weechat instead
export IRC_CLIENT='irssi'

# Set this to the command you use for todo.txt-cli
export TODO="t"

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true
# Set to actual location of gitstatus directory if installed
#export SCM_GIT_GITSTATUS_DIR="$HOME/gitstatus"
# per default gitstatus uses 2 times as many threads as CPU cores, you can change this here if you must
#export GITSTATUS_NUM_THREADS=8

# Set Xterm/screen/Tmux title with only a short hostname.
# Uncomment this (or set SHORT_HOSTNAME to something else),
# Will otherwise fall back on $HOSTNAME.
#export SHORT_HOSTNAME=$(hostname -s)

# Set Xterm/screen/Tmux title with only a short username.
# Uncomment this (or set SHORT_USER to something else),
# Will otherwise fall back on $USER.
#export SHORT_USER=${USER:0:8}

# If your theme use command duration, uncomment this to
# enable display of last command duration.
#export BASH_IT_COMMAND_DURATION=true
# You can choose the minimum time in seconds before
# command duration is displayed.
#export COMMAND_DURATION_MIN_SECONDS=1

# Set Xterm/screen/Tmux title with shortened command and directory.
# Uncomment this to set.
#export SHORT_TERM_LINE=true

# Set vcprompt executable path for scm advance info in prompt (demula theme)
# https://github.com/djl/vcprompt
#export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt

# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1

# Uncomment this to make Bash-it create alias reload.
# export BASH_IT_RELOAD_LEGACY=1

# Load Bash It
source "$BASH_IT"/bash_it.sh


########################################################################################################################
# Aliases
########################################################################################################################

# WARNING: This must be placed after sourcing bash-it to work!
#
# You may want to put all your additions into a separate file like  ~/.bash_aliases, instead of adding them here
# directly. See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


{{ if eq .chezmoi.username "baptiste" -}}
#########################################################################################################################
# Dropbox
#########################################################################################################################

# The 'dropbox' script is created by fresh install in '~/.local/bin"
if which dropbox >/dev/null ; then
    status=$(dropbox status)

    if [ "${status}" == "Dropbox isn't running!" ] ; then
        dropbox start
    elif [ "${status}" != "Up to date" ] ; then
        echo "Failed to start Dropbox!"
        # TODO: Find a clean way to notify and log
        #       see https://wiki.archlinux.org/title/Desktop_notifications
    fi
fi
{{ end }}


########################################################################################################################
# fzf
########################################################################################################################
[ -f ~/.fzf.bash ] && source ~/.fzf.bash


########################################################################################################################
# z
########################################################################################################################
. ~/.local/bin/z.sh


########################################################################################################################
# Go
########################################################################################################################
export PATH=$PATH:/usr/local/go/bin


########################################################################################################################
# Node
########################################################################################################################
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).


########################################################################################################################
# Ruby
########################################################################################################################
export PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH


########################################################################################################################
# Rust
########################################################################################################################
. "$HOME/.cargo/env"


#########################################################################################################################
# Kubernetes
#########################################################################################################################
if which kubectl >/dev/null ; then
    source <(kubectl completion bash)

    complete -F __start_kubectl k
fi

########################################################################################################################
# Terraform
########################################################################################################################
complete -C ~/.local/bin/terraform terraform


########################################################################################################################
# Serverless framework
########################################################################################################################
export PATH="$HOME/.serverless/bin:$PATH"


########################################################################################################################
# Texlive
########################################################################################################################
export PATH="$PATH:/usr/local/texlive/2022/bin/x86_64-linux"


#######################################################################################################################
# Utility functions
#######################################################################################################################

# Generate a random password
gpw() {
    openssl rand -base64 48 | cut -c1-"${1}";
}


#######################################################################################################################
# Various tricks
#######################################################################################################################

# Allow Ctrl+Z to work for 'bg' too.
#
# see https://serverfault.com/questions/283678/whats-the-short-cut-for-fg-in-linux#answer-705440
stty susp undef
bind '"\C-z":"fg\015"'

# Fix Tmux with powerline initialization
#
# see https://github.com/powerline/powerline/issues/1566#issuecomment-206996590
powerline-config tmux setup &> /dev/null
